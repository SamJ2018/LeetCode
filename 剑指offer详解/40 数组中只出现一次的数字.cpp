/*
一个整型数组里除了两个数字之外，其他的数字都出现了两次。

请写程序找出这两个只出现一次的数字。

你可以假设这两个数字一定存在。

样例
输入：[1,2,3,3,4,4]

输出：[1,2]
 */

class Solution {
public:
    vector<int> findNumsAppearOnce(vector<int>& nums) {
        
    }
};

/*
在一个数组中除了一个数字只出现一次之外，其他数字都出现了三次。

请找出那个只出现一次的数字。

你可以假设满足条件的数字一定存在。

思考题：

如果要求只使用 O(n) 的时间和额外 O(1) 的空间，该怎么做呢？
样例
输入：[1,1,1,2,2,2,3,4,4,4]

输出：3
 */

class Solution {
public:
    int findNumberAppearingOnce(vector<int>& nums) {
        
    }
};